// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function cleanDatabase() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
  
  try {
    // –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ foreign keys)
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ Guess...');
    const guesses = await prisma.guess.deleteMany({});
    console.log(`‚úì –£–¥–∞–ª–µ–Ω–æ ${guesses.count} –∑–∞–ø–∏—Å–µ–π Guess`);
    
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ SessionPhoto...');
    const sessionPhotos = await prisma.sessionPhoto.deleteMany({});
    console.log(`‚úì –£–¥–∞–ª–µ–Ω–æ ${sessionPhotos.count} –∑–∞–ø–∏—Å–µ–π SessionPhoto`);
    
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ Session...');
    const sessions = await prisma.session.deleteMany({});
    console.log(`‚úì –£–¥–∞–ª–µ–Ω–æ ${sessions.count} –∑–∞–ø–∏—Å–µ–π Session`);
    
    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞!');
    console.log('–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é: npx prisma db push --accept-data-loss');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

cleanDatabase();

