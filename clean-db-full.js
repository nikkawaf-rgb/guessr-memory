// –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function cleanDatabase() {
  console.log('üßπ –ü–û–õ–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
  
  try {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    const tables = [
      'CommentLike',
      'Report',
      'Comment',
      'UserAchievement',
      'Achievement',
      'PhotoPeopleZone',
      'Person',
      'Location',
      'Guess',
      'SessionPhoto',
      'Session',
      'Photo',
      'User'
    ];
    
    for (const table of tables) {
      try {
        const count = await prisma.$executeRawUnsafe(`DELETE FROM "${table}"`);
        console.log(`‚úì ${table}: —É–¥–∞–ª–µ–Ω–æ ${count} –∑–∞–ø–∏—Å–µ–π`);
      } catch (e) {
        console.log(`  ${table}: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∂–µ –æ—á–∏—â–µ–Ω–∞`);
      }
    }
    
    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!');
    console.log('–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é: npx prisma db push --accept-data-loss');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

cleanDatabase();

