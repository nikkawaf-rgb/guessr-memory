// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –ª–æ–∫–∞–ª—å–Ω–æ
const baseUrl = 'http://localhost:3000';

async function testPhotosList() {
  console.log('\n=== –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π ===');
  try {
    const response = await fetch(`${baseUrl}/api/admin/photos`);
    const data = await response.json();
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    console.log('–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ:', data.photos?.length || 0);
    if (data.photos?.length > 0) {
      console.log('–ü–µ—Ä–≤–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è:', data.photos[0]);
    }
    return data.photos || [];
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
    return [];
  }
}

async function testDeletePhoto(photoId) {
  console.log('\n=== –¢–µ—Å—Ç: –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ===');
  console.log('ID —Ñ–æ—Ç–æ:', photoId);
  try {
    const response = await fetch(`${baseUrl}/api/admin/photos/delete`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ photoId })
    });
    const data = await response.json();
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    console.log('–û—Ç–≤–µ—Ç:', data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  }
}

async function testStartSession(playerName) {
  console.log('\n=== –¢–µ—Å—Ç: –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ ===');
  console.log('–ò–º—è –∏–≥—Ä–æ–∫–∞:', playerName);
  try {
    const response = await fetch(`${baseUrl}/api/session/start`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ playerName })
    });
    const data = await response.json();
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    console.log('–û—Ç–≤–µ—Ç:', data);
    return data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  }
}

async function runTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API...\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
  const photos = await testPhotosList();
  
  // 2. –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é
  await testStartSession('–¢–µ—Å—Ç–µ—Ä');
  
  // 3. –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –ø—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤–æ–µ
  if (photos.length > 0) {
    console.log('\n‚ö†Ô∏è –ï—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è');
    console.log('–£–¥–∞–ª—è—Ç—å? –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ');
    // await testDeletePhoto(photos[0].id);
  }
  
  console.log('\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
}

runTests();

