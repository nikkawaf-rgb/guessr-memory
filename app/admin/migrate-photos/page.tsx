"use client";

import { useState } from "react";

export default function MigratePhotosPage() {
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<{ success?: boolean; error?: string; message?: string } | null>(null);

  const handleMigrate = async () => {
    if (!confirm("–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö? –≠—Ç–æ –¥–æ–±–∞–≤–∏—Ç –ø–æ–ª—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.")) {
      return;
    }

    setLoading(true);
    setResult(null);

    try {
      const response = await fetch("/api/admin/migrate-photos", {
        method: "POST",
      });

      const data = await response.json();
      setResult(data);
    } catch (error) {
      setResult({ error: error instanceof Error ? error.message : "Unknown error" });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-2xl mx-auto bg-white rounded-lg shadow-lg p-8">
        <h1 className="text-3xl font-bold mb-6 text-gray-800">
          üîß –ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
        </h1>

        <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
          <p className="text-sm text-yellow-800">
            ‚ö†Ô∏è –≠—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É Photo:
          </p>
          <ul className="list-disc list-inside mt-2 text-sm text-yellow-800">
            <li>uploadedBy (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)</li>
            <li>uploaderComment (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞)</li>
            <li>moderationStatus (—Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏)</li>
            <li>moderatedBy (ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)</li>
            <li>moderatedAt (–¥–∞—Ç–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏)</li>
            <li>rejectionReason (–ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è)</li>
          </ul>
        </div>

        <button
          onClick={handleMigrate}
          disabled={loading}
          className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-bold py-3 px-6 rounded-lg transition"
        >
          {loading ? "–ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é..." : "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é"}
        </button>

        {result && (
          <div className={`mt-6 p-4 rounded-lg ${result.success ? "bg-green-50 border border-green-200" : "bg-red-50 border border-red-200"}`}>
            {result.success ? (
              <div>
                <h2 className="text-lg font-bold text-green-800 mb-2">‚úÖ –£—Å–ø–µ—à–Ω–æ!</h2>
                <p className="text-sm text-green-700">{result.message}</p>
              </div>
            ) : (
              <div>
                <h2 className="text-lg font-bold text-red-800 mb-2">‚ùå –û—à–∏–±–∫–∞</h2>
                <p className="text-sm text-red-700">{result.error}</p>
              </div>
            )}
          </div>
        )}

        <div className="mt-6 text-sm text-gray-600">
          <p>üí° –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.</p>
        </div>
      </div>
    </div>
  );
}

