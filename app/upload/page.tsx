"use client";

import { useState } from "react";
import Link from "next/link";
import Image from "next/image";

export default function UserUploadPage() {
  const [file, setFile] = useState<File | null>(null);
  const [previewUrl, setPreviewUrl] = useState<string>("");
  const [playerName, setPlayerName] = useState("");
  const [manualDate, setManualDate] = useState("");
  const [uploading, setUploading] = useState(false);
  const [message, setMessage] = useState<{
    type: "success" | "error" | "info";
    text: string;
  } | null>(null);
  const [newAchievement, setNewAchievement] = useState<{
    title: string;
    description: string;
    icon: string;
  } | null>(null);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const selectedFile = e.target.files?.[0];
    if (selectedFile) {
      setFile(selectedFile);
      setPreviewUrl(URL.createObjectURL(selectedFile));
      setMessage(null);
      setNewAchievement(null);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!file) {
      setMessage({ type: "error", text: "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª" });
      return;
    }

    if (!playerName.trim()) {
      setMessage({ type: "error", text: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–≥—Ä–æ–∫–∞" });
      return;
    }

    setUploading(true);
    setMessage(null);
    setNewAchievement(null);

    const formData = new FormData();
    formData.append("file", file);
    formData.append("playerName", playerName.trim());
    if (manualDate) {
      formData.append("manualDate", manualDate);
    }

    try {
      const response = await fetch("/api/upload/user-photo", {
        method: "POST",
        body: formData,
      });

      const data = await response.json();

      if (response.ok) {
        setMessage({ type: "success", text: data.message });
        
        if (data.newAchievement) {
          setNewAchievement(data.newAchievement);
        }

        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
        setFile(null);
        setPreviewUrl("");
        setManualDate("");
        
        // –°–±—Ä–æ—Å–∏—Ç—å input file
        const fileInput = document.getElementById("file-input") as HTMLInputElement;
        if (fileInput) fileInput.value = "";
      } else {
        setMessage({ type: "error", text: data.error || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏" });
      }
    } catch (error) {
      console.error("Upload error:", error);
      setMessage({ type: "error", text: "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º" });
    } finally {
      setUploading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-indigo-100 p-4">
      <div className="max-w-2xl mx-auto">
        {/* Header */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-6">
          <div className="flex items-center justify-between mb-4">
            <h1 className="text-3xl font-bold text-gray-800">
              üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
            </h1>
            <Link
              href="/"
              className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition"
            >
              ‚Üê –ù–∞–∑–∞–¥
            </Link>
          </div>
          <p className="text-gray-600 text-sm">
            –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏–∑ –¢–æ—á–∫–∏ –†–æ—Å—Ç–∞! –ü–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –≤ –∏–≥—Ä–µ.
          </p>
        </div>

        {/* Achievement notification */}
        {newAchievement && (
          <div className="bg-gradient-to-r from-yellow-50 to-amber-50 border-2 border-yellow-400 rounded-xl p-6 mb-6 animate-pulse">
            <h3 className="text-2xl font-bold text-center text-amber-800 mb-3">
              üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! üèÜ
            </h3>
            <div className="bg-white rounded-lg p-4 shadow-md border-2 border-amber-300">
              <div className="flex items-center gap-4">
                <div className="text-5xl">{newAchievement.icon}</div>
                <div className="flex-1">
                  <div className="font-bold text-xl text-gray-800">
                    {newAchievement.title}
                  </div>
                  <div className="text-sm text-gray-600 mt-1">
                    {newAchievement.description}
                  </div>
                </div>
                <div className="text-3xl">‚ú®</div>
              </div>
            </div>
          </div>
        )}

        {/* Message */}
        {message && (
          <div
            className={`p-4 rounded-lg mb-6 ${
              message.type === "success"
                ? "bg-green-100 border border-green-400 text-green-800"
                : message.type === "error"
                ? "bg-red-100 border border-red-400 text-red-800"
                : "bg-blue-100 border border-blue-400 text-blue-800"
            }`}
          >
            {message.text}
          </div>
        )}

        {/* Upload form */}
        <div className="bg-white rounded-xl shadow-lg p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* Player name */}
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                –í–∞—à–µ –∏–º—è –∏–≥—Ä–æ–∫–∞
              </label>
              <input
                type="text"
                value={playerName}
                onChange={(e) => setPlayerName(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º –≤—ã –∏–≥—Ä–∞–µ—Ç–µ"
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                required
              />
              <p className="text-xs text-gray-500 mt-1">
                üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ –∂–µ –∏–º—è, —á—Ç–æ –∏ –≤ –∏–≥—Ä–µ, –∏–Ω–∞—á–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–µ –∑–∞—Å—á–∏—Ç–∞—é—Ç—Å—è
              </p>
            </div>

            {/* File input */}
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
              </label>
              <input
                id="file-input"
                type="file"
                accept="image/*"
                onChange={handleFileChange}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                required
              />
              <p className="text-xs text-gray-500 mt-1">
                üì∏ –ú–∞–∫—Å–∏–º—É–º 10MB. –§–æ—Ä–º–∞—Ç—ã: JPG, PNG, WEBP –∏ –¥—Ä.
              </p>
            </div>

            {/* Preview */}
            {previewUrl && (
              <div className="border-2 border-dashed border-gray-300 rounded-lg p-4">
                <p className="text-sm font-semibold text-gray-700 mb-2">
                  –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:
                </p>
                <div className="relative w-full h-64">
                  <Image
                    src={previewUrl}
                    alt="Preview"
                    fill
                    className="object-contain rounded"
                    sizes="(max-width: 768px) 100vw, 600px"
                  />
                </div>
              </div>
            )}

            {/* Manual date (optional) */}
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                –î–∞—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
              </label>
              <input
                type="date"
                value={manualDate}
                onChange={(e) => setManualDate(e.target.value)}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
              <p className="text-xs text-gray-500 mt-1">
                üìÖ –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∞—Ç—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ EXIF, —É–∫–∞–∂–∏—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é
              </p>
            </div>

            {/* Info box */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <h3 className="font-semibold text-blue-900 mb-2">
                ‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h3>
              <ul className="text-sm text-blue-800 space-y-1">
                <li>
                  ‚Ä¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ <strong>–º–æ–¥–µ—Ä–∞—Ü–∏—é</strong>
                </li>
                <li>
                  ‚Ä¢ –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –∏–≥—Ä–µ –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
                </li>
                <li>
                  ‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–∏–∑ –¢–æ—á–∫–∏ –†–æ—Å—Ç–∞, —Å–æ–±—ã—Ç–∏—è, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è)
                </li>
                <li>
                  ‚Ä¢ –ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω
                </li>
              </ul>
            </div>

            {/* Submit button */}
            <button
              type="submit"
              disabled={uploading || !file || !playerName.trim()}
              className="w-full bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-white font-bold py-3 px-6 rounded-lg transition disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {uploading ? "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..." : "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é"}
            </button>
          </form>
        </div>

        {/* Link to home */}
        <div className="mt-6 text-center">
          <Link
            href="/"
            className="text-blue-600 hover:text-blue-800 font-semibold"
          >
            üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  );
}

